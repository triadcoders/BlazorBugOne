@using System.Net.Http.Json

@using BlazorBugOne.Shared;

@inject HttpClient httpClient
@inject NavigationManager NavigationManager


@page "/MudSort"

<MudTable Items="@bugs" Hover="true" SortLabel="Sort By" Dense=true CommitEditTooltip="Save">
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<Bug, object>(x=>x.id)">BugId#</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Bug, object>(x=>x.summary)">Bug Summary</MudTableSortLabel></MudTh>
        @*<MudTh><MudTableSortLabel SortBy="new Func<Bug, object>(x=>x.progressreport)">Progress Report</MudTableSortLabel></MudTh>*@
        <MudTh><MudTableSortLabel SortBy="new Func<Bug, object>(x => x.project?.name)">Project Name</MudTableSortLabel></MudTh>
        @*<MudTh><MudTableSortLabel SortBy="new Func<Bug, object>(x=>x.targetdate)">Target Completion Date</MudTableSortLabel></MudTh>*@
        <MudTh><MudTableSortLabel SortBy="new Func<Bug, object>(x => x.person?.firstname)">Assigned To</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Bug, object>(x => x.priority)">Priority</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Bug, object>(x => x.lifecycle)">Life Cycle</MudTableSortLabel></MudTh>
        @*<MudTh><MudTableSortLabel Enabled="@enabled" SortBy="new Func<Element, object>(x=>x.Sign)">Sign</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Element, object>(x=>x.Name)">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Element, object>(x=>x.Position)">Position</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Element, object>(x=>x.Molar)">Mass</MudTableSortLabel></MudTh>*@
    </HeaderContent>
    <RowTemplate>
        <MudTd @onclick="@(() => DoThing(@context))" DataLabel="bugid">@context.id</MudTd>
        @*<MudTd DataLabel="description">@context.description</MudTd>*@
        <MudTd DataLabel="summary">@context.summary</MudTd>
        <MudTd DataLabel="project">@context.project?.name</MudTd>
        @*<MudTd DataLabel="targetdate">@context.targetdate</MudTd>*@
        <MudTd DataLabel="firstname">@context.person?.firstname</MudTd>
        <MudTd DataLabel="priority">@context.priority</MudTd>
        <MudTd DataLabel="lifecycle">@context.lifecycle</MudTd>
        <MudTd><MudButton Disabled="@enabled" Variant="Variant.Filled" Size="Size.Small" OnClick="@(() => DoThing(context))">Edit</MudButton></MudTd>

        @*<MudTd>
                <br />
                <MudTextField Margin="Margin.Dense" Variant="Variant.Outlined" @bind-Value="@context.summary"  @onclick="@(() => DoThing(@context))" Label="Bug Summary" />
            </MudTd>*@

    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{50, 100}" />
    </PagerContent>
</MudTable>

@*<MudSwitch @bind-Checked="enabled" Color="Color.Info">Enable sorting on the Sign Column</MudSwitch>*@
@*<MudSwitch @bind-Checked="enabled" Color="Color.Info">Enable Admin Mode</MudSwitch>*@
<MudSwitch @onclick="() => FixToggle(enabled.ToString())" @bind-Checked="@enabled" Color="Color.Info"  Label="@(!enabled ? "User Mode" : "Admin Mode")" />

<h1>@alert</h1>



@code {

    [Parameter]
    public int bugid { get; set; }

    Bug bug;




    MudTable<Bug> _table;

    // private EventCallback<ICollection<Bug>> TableChanged { get; set; }
    private EventCallback<ICollection<Bug>> TableChanged { get; set; }
    string alert = "NA";

    private bool enabled = false;


    private IEnumerable<Bug> bugs = new List<Bug>();




    protected override async Task OnInitializedAsync()
    {



        bugs = await httpClient.GetFromJsonAsync<List<Bug>>("BugManage/GetBugs");

        foreach (var item in bugs)
        {
            if (item.person != null)
            {
                Console.WriteLine("Person name is " + item.person.firstname);
            }
        }
    }


    private void FixToggle(string mystring)
    {


        enabled = !enabled;

        alert = enabled.ToString();



    }

    private async Task DoThing(Bug bug)
    {
        // await TableChanged.InvokeAsync(bugs);
        alert = "WeeeWooo WeeeWooo " + bug.id;


        NavigationManager.NavigateTo("/MudTest/" + bug.id);

    }


}

